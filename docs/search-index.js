var searchIndex = {};
searchIndex['clog'] = {"items":[[0,"","clog","clog\n====",null,null],[3,"Clog","","The base struct used to set options and interact with the library.",null,null],[12,"grep","","The grep search pattern used to find commits we are interested in (Defaults to:\n\"^ft|^feat|^fx|^fix|^perf|^unk|BREAKING\\'\")",0,null],[12,"format","","The format of the commit output from `git log` (Defaults to: \"%H%n%s%n%b%n==END==\")",0,null],[12,"repo","","The repository used for the base of hyper-links",0,null],[12,"link_style","","The link style to used for commit and issue hyper-links",0,null],[12,"version","","The version tag for the release (Defaults to the short hash of the latest commit)",0,null],[12,"patch_ver","","Whether or not this is a patch version update or not. Patch versions use a lower markdown\nheader (`###` instead of `##` for major and minor releases)",0,null],[12,"subtitle","","The subtitle for the release",0,null],[12,"from","","Where to start looking for commits using a hash (or short hash)",0,null],[12,"to","","Where to stop looking for commits using a hash (or short hash). (Defaults to `HEAD`)",0,null],[12,"infile","","The file to use as the old changelog data to be appended to anything new found.",0,null],[12,"outfile","","The file to use as the changelog output file (Defaults to `stdout`)",0,null],[12,"section_map","","Maps out the sections and aliases used to trigger those sections. The keys are the section\nname, and the values are an array of aliases.",0,null],[12,"git_dir","","The git dir with all the meta-data (Typically the `.git` sub-directory of the project)",0,null],[12,"git_work_tree","","The working directory of the git project (typically the project directory, or parent of the\n`.git` directory)",0,null],[12,"regex","","The regex used to get components, aliases, and messages",0,null],[12,"closes_regex","","The regex used to get closes issue links",0,null],[12,"out_format","","The format to output the changelog in (Defaults to Markdown)",0,null],[3,"SectionMap","","A struct which holds sections to and components->commits map",null,null],[12,"sections","","The top level map of the changelog, i.e. sections -> components",1,null],[4,"LinkStyle","","",null,null],[13,"Github","","",2,null],[13,"Gitlab","","",2,null],[13,"Stash","","",2,null],[0,"git","","",null,null],[3,"Commit","clog::git","The struct representation of a `Commit`",null,null],[12,"hash","","The 40 char hash",3,null],[12,"subject","","The commit subject",3,null],[12,"component","","The component (if any)",3,null],[12,"closes","","Any issues this commit closes",3,null],[12,"breaks","","Any issues this commit breaks",3,null],[12,"commit_type","","The commit type (or alias)",3,null],[6,"Commits","","A convienience type for multiple commits",null,null],[11,"clone","","",3,{"inputs":[{"name":"commit"}],"output":{"name":"commit"}}],[11,"fmt","","",3,{"inputs":[{"name":"commit"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"fmt","clog","",null,null],[3,"MarkdownWriter","clog::fmt","Wraps a `std::io::Write` object to write `clog` output in a Markdown format",null,null],[3,"JsonWriter","","Wraps a `std::io::Write` object to write `clog` output in a JSON format",null,null],[4,"ChangelogFormat","","",null,null],[13,"Json","","",4,null],[13,"Markdown","","",4,null],[11,"new","","Creates a new instance of the `MarkdownWriter` struct using a `std::io::Write` object.",5,{"inputs":[{"name":"markdownwriter"},{"name":"t"}],"output":{"name":"markdownwriter"}}],[11,"write_changelog","","",5,{"inputs":[{"name":"markdownwriter"},{"name":"clog"},{"name":"sectionmap"}],"output":{"name":"writerresult"}}],[11,"new","","Creates a new instance of the `JsonWriter` struct using a `std::io::Write` object.",6,{"inputs":[{"name":"jsonwriter"},{"name":"t"}],"output":{"name":"jsonwriter"}}],[11,"write_changelog","","",6,{"inputs":[{"name":"jsonwriter"},{"name":"clog"},{"name":"sectionmap"}],"output":{"name":"writerresult"}}],[6,"WriterResult","","Convienience type for returning results of writing a changelog with a `Clog` struct",null,null],[8,"FormatWriter","","A trait that allows writing the results of a `clog` run which can then be written in an\narbitrary format. The single required function `write_changelog()` accepts a `clog::SectionMap`\nwhich can be thought of similiar to a `clog` \"AST\" of sorts.",null,null],[10,"write_changelog","","Writes a changelog from a given `clog::SectionMap` which can be thought of as an \"AST\" of\nsorts",7,{"inputs":[{"name":"formatwriter"},{"name":"clog"},{"name":"sectionmap"}],"output":{"name":"writerresult"}}],[11,"fmt","","",4,{"inputs":[{"name":"changelogformat"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",4,{"inputs":[{"name":"changelogformat"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"changelogformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"variants","","",4,{"inputs":[{"name":"changelogformat"}],"output":{"name":"vec"}}],[11,"from_commits","clog","Creates a section map from a vector of commits, which we can then iterate through and write",1,{"inputs":[{"name":"sectionmap"},{"name":"vec"}],"output":{"name":"sectionmap"}}],[11,"fmt","","",0,{"inputs":[{"name":"clog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a default `Clog` struct using the current working directory and searches for the\ndefault `.clog.toml` configuration file.",0,{"inputs":[{"name":"clog"}],"output":{"name":"builderresult"}}],[11,"with_all","","Creates a `Clog` struct using a specific git working directory and project directory as\nwell as a custom named TOML configuration file.",0,{"inputs":[{"name":"clog"},{"name":"p"},{"name":"p"},{"name":"p"}],"output":{"name":"builderresult"}}],[11,"with_dir_and_file","","Creates a `Clog` struct using a specific git working directory OR project directory as\nwell as a custom named TOML configuration file.",0,{"inputs":[{"name":"clog"},{"name":"p"},{"name":"p"}],"output":{"name":"builderresult"}}],[11,"with_dir","","Creates a `Clog` struct using a specific git working directory OR project directory.\nSearches for the default configuration TOML file `.clog.toml`",0,{"inputs":[{"name":"clog"},{"name":"p"}],"output":{"name":"builderresult"}}],[11,"with_dirs","","Creates a `Clog` struct using a specific git working directory AND a project directory.\nSearches for the default configuration TOML file `.clog.toml`",0,{"inputs":[{"name":"clog"},{"name":"p"},{"name":"p"}],"output":{"name":"builderresult"}}],[11,"from_file","","Creates a `Clog` struct a custom named TOML configuration file. Sets the parent directory\nof the configuration file to the working tree and sibling `.git` directory as the git\ndirectory.",0,{"inputs":[{"name":"clog"},{"name":"p"}],"output":{"name":"builderresult"}}],[11,"grep","","Sets the grep search pattern for finding commits.",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"format","","Sets the format for `git log` output",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"repository","","Sets the repository used for the base of hyper-links",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"link_style","","Sets the link style to use for hyper-links",0,{"inputs":[{"name":"clog"},{"name":"linkstyle"}],"output":{"name":"clog"}}],[11,"version","","Sets the version for the release",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"subtitle","","Sets the subtitle for the release",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"from","","Sets how far back to begin searching commits using a short hash or full hash",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"to","","Sets what point to stop searching for commits using a short hash or full hash (Defaults to\n`HEAD`)",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"changelog","","Sets the changelog file to output or prepend to (Defaults to `stdout` if omitted)",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"outfile","","Sets the changelog output file to output or prepend to (Defaults to `stdout` if omitted),\nthis is useful inconjunction with `Clog::infile()` because it allows to read previous\ncommits from one place and output to another.",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"infile","","Sets the changelog input file to read previous commits or changelog data from. This is\nuseful inconjunction with `Clog::infile()` because it allows to read previous commits from\none place and output to another.",0,{"inputs":[{"name":"clog"},{"name":"s"}],"output":{"name":"clog"}}],[11,"git_dir","","Sets the `git` metadata directory (typically `.git` child of your project working tree)",0,{"inputs":[{"name":"clog"},{"name":"p"}],"output":{"name":"clog"}}],[11,"git_work_tree","","Sets the `git` working tree directory (typically your project directory)",0,{"inputs":[{"name":"clog"},{"name":"p"}],"output":{"name":"clog"}}],[11,"patch_ver","","Sets whether or not this is a patch release (defaults to `false`)",0,{"inputs":[{"name":"clog"},{"name":"bool"}],"output":{"name":"clog"}}],[11,"output_format","","The format of output for the changelog (Defaults to Markdown)",0,{"inputs":[{"name":"clog"},{"name":"changelogformat"}],"output":{"name":"clog"}}],[11,"get_commits","","Retrieves a `Vec<Commit>` of only commits we care about.",0,{"inputs":[{"name":"clog"}],"output":{"name":"commits"}}],[11,"get_latest_tag","","Retrieves the latest tag from the git directory",0,{"inputs":[{"name":"clog"}],"output":{"name":"string"}}],[11,"get_latest_tag_ver","","Retrieves the latest tag version from the git directory",0,{"inputs":[{"name":"clog"}],"output":{"name":"string"}}],[11,"get_last_commit","","Retrieves the hash of the most recent commit from the git directory (i.e. HEAD)",0,{"inputs":[{"name":"clog"}],"output":{"name":"string"}}],[11,"section_for","","Retrieves the section title for a given alias",0,{"inputs":[{"name":"clog"},{"name":"str"}],"output":{"name":"string"}}],[11,"write_changelog","","Writes the changelog using whatever options have been specified thus far.",0,{"inputs":[{"name":"clog"}],"output":{"name":"writerresult"}}],[11,"write_changelog_to","","Writes the changelog to a specified file, and prepends new commits if file exists, or\ncreates the file if it doesn't.",0,{"inputs":[{"name":"clog"},{"name":"p"}],"output":{"name":"writerresult"}}],[11,"write_changelog_from","","Writes the changelog from a specified input file, and appends new commits",0,{"inputs":[{"name":"clog"},{"name":"p"}],"output":{"name":"writerresult"}}],[11,"write_changelog_with","","Writes a changelog with a specified `FormatWriter` format",0,{"inputs":[{"name":"clog"},{"name":"w"}],"output":{"name":"writerresult"}}],[0,"error","","",null,null],[4,"Error","clog::error","An enum for describing and handling various errors encountered while dealing with `clog`\nbuilding, or writing of changelogs.",null,null],[13,"ConfigParseErr","","Generated while parsing config files such .clog.toml",8,null],[13,"ConfigFormatErr","","Generated if the config file is not in TOML format",8,null],[13,"CurrentDirErr","","Generated if the OS cannot determine the current directory",8,null],[13,"TomlReadErr","","Generated when unable to read the TOML config file (perhaps due to permissions, etc.)",8,null],[13,"LinkStyleErr","","Generated when an unrecognized link-style value is used",8,null],[13,"SemVerErr","","Generated when a string cannot be parsed to a SemVer value",8,null],[13,"CreateFileErr","","Generated when there are errors creating the output file or stream",8,null],[13,"WriteErr","","Generated when there are errors writing to the changelog output file",8,null],[13,"IoErr","","Generic catch all I/O related error",8,null],[13,"UnknownErr","","Unknown, but fatal error (a catch all)",8,null],[11,"fmt","","",8,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_fatal","","Return whether this was a fatal error or not.",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"exit","","Print this error and immediately exit the program.",8,{"inputs":[{"name":"error"}],"output":null}],[11,"fmt","","",8,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"fmt","clog","",2,{"inputs":[{"name":"linkstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",2,{"inputs":[{"name":"linkstyle"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"linkstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"variants","","",2,{"inputs":[{"name":"linkstyle"}],"output":{"name":"vec"}}],[11,"issue_link","","Gets a hyperlink url to an issue in the specified format.",2,{"inputs":[{"name":"linkstyle"},{"name":"s"},{"name":"s"}],"output":{"name":"string"}}],[11,"commit_link","","Gets a hyperlink url to a commit in the specified format.",2,{"inputs":[{"name":"linkstyle"},{"name":"s"},{"name":"s"}],"output":{"name":"string"}}]],"paths":[[3,"Clog"],[3,"SectionMap"],[4,"LinkStyle"],[3,"Commit"],[4,"ChangelogFormat"],[3,"MarkdownWriter"],[3,"JsonWriter"],[8,"FormatWriter"],[4,"Error"]]};
initSearch(searchIndex);
